import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  ManyToOne,
  CreateDateColumn,
} from 'typeorm';
import { User } from './user.orm-entity';

@Entity('wallets')
export class Wallet {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  tokenSymbol: string; // 'BTC', 'ETH', 'USDT', 'USD'

  @Column({ type: 'varchar' })
  type: 'crypto' | 'fiat';

  @Column({ nullable: true })
  network: string; // 'ethereum', 'tron', null –¥–ª—è —Ñ–∏–∞—Ç–∞

  @Column({ unique: true, nullable: true })
  address: string; // –¢–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏–ø—Ç—ã

  @Column({ nullable: true })
  encryptedPrivateKey: string; // –¢–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏–ø—Ç—ã

  @Column({ type: 'decimal', precision: 18, scale: 8, default: 0 })
  balance: number;

  @Column({ type: 'numeric', default: 0 })
  lastKnownBalance: string;

  @Column()
  label: string; // ‚úÖ –¥–æ–±–∞–≤–ª–µ–Ω–æ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: "–û—Å–Ω–æ–≤–Ω–æ–π", "–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π", "–ö—Ä–∏–ø—Ç–æ 1"

  @ManyToOne(() => User, (user) => user.wallets)
  user: User;

  @Column()
  userId: string; // üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã userId –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é

  @CreateDateColumn()
  createdAt: Date;
}
